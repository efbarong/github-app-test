name: Check and Configure Repository

on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate new github app token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Update repository topics 
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ env.GH_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }} \
          -d '{
            "delete_branch_on_merge":"true",
            "allow_update_branch":"true",
            "default_branch":"master"
          }'
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Protect master branch
        run: |
          curl \
          -X PUT \
          -H "Authorization: Bearer ${{ env.GH_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/branches/master/protection \
          -d '{
            "required_status_checks": {
              "strict": true,
              "contexts": ["use-checks / Lint and Test", "use-pr-labeler / Labeling Job"]
            },
            "enforce_admins": false,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            },
            "restrictions": null,
            "required_conversation_resolution": true
          }'
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Create slug from repository name
        id: create_slug
        run: |
          repo_name=$(echo "${{ github.repository }}" | awk -F/ '{print $2}')
          slug=$(echo "${repo_name}" | tr '[:upper:]' '[:lower:]' | tr -c '[:alnum:]' '-' | sed 's/-*$//')
          echo "slug=$slug" >> $GITHUB_ENV

      - name: Add repository secrets
        run: |
          gh secret set MODYO_BUILD_DIRECTORY --body "build"
          gh secret set MODYO_DISABLE_LIQUID_REGEX --body "raw"

          gh secret set MODYO_WIDGET_NAME_CATALOG --body "${slug}"
          gh secret set MODYO_WIDGET_NAME_DEMO --body "${slug}"

          gh variable set CUSTOM_FOLDER --body "build"
        env:
          slug: ${{ env.slug }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}